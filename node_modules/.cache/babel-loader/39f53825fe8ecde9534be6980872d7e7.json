{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: String\n  },\n\n  data() {\n    return {\n      task: \"\",\n      editedTask: null,\n      statuses: [\"to-do\", \"in-progress\", \"finished\"],\n\n      /* Status could be: 'to-do' / 'in-progress' / 'finished' */\n      tasks: [{\n        name: \"Write an article.\",\n        status: \"to-do\"\n      }, {\n        name: \"Finish breakfast.\",\n        status: \"in-progress\"\n      }, {\n        name: \"Create a Vuejs app for assignment\",\n        status: \"finished\"\n      }]\n    };\n  },\n\n  methods: {\n    /**\n     * Capitalize first character\n     */\n    capitalizeFirstChar(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n\n    /**\n     * Change status of task by index\n     */\n    changeStatus(index) {\n      let newIndex = this.statuses.indexOf(this.tasks[index].status);\n      if (++newIndex > 2) newIndex = 0;\n      this.tasks[index].status = this.statuses[newIndex];\n    },\n\n    /**\n     * Deletes task by index\n     */\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n    },\n\n    /**\n     * Edit task\n     */\n    editTask(index) {\n      this.task = this.tasks[index].name;\n      this.editedTask = index;\n    },\n\n    /**\n     * Add / Update task\n     */\n    submitTask() {\n      if (this.task.length === 0) return;\n      /* We need to update the task */\n\n      if (this.editedTask != null) {\n        this.tasks[this.editedTask].name = this.task;\n        this.editedTask = null;\n      } else {\n        /* We need to add new task */\n        this.tasks.push({\n          name: this.task,\n          status: \"todo\"\n        });\n      }\n\n      this.task = \"\";\n    }\n\n  }\n};","map":{"version":3,"sources":["TodoApp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA,eAAA;EACA,IAAA,EAAA,YADA;EAEA,KAAA,EAAA;IACA,GAAA,EAAA;EADA,CAFA;;EAMA,IAAA,GAAA;IACA,OAAA;MACA,IAAA,EAAA,EADA;MAEA,UAAA,EAAA,IAFA;MAGA,QAAA,EAAA,CAAA,OAAA,EAAA,aAAA,EAAA,UAAA,CAHA;;MAKA;MACA,KAAA,EAAA,CACA;QACA,IAAA,EAAA,mBADA;QAEA,MAAA,EAAA;MAFA,CADA,EAKA;QACA,IAAA,EAAA,mBADA;QAEA,MAAA,EAAA;MAFA,CALA,EASA;QACA,IAAA,EAAA,mCADA;QAEA,MAAA,EAAA;MAFA,CATA;IANA,CAAA;EAqBA,CA5BA;;EA8BA,OAAA,EAAA;IACA;AACA;AACA;IACA,mBAAA,CAAA,GAAA,EAAA;MACA,OAAA,GAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA,KAAA,GAAA,CAAA,KAAA,CAAA,CAAA,CAAA;IACA,CANA;;IAQA;AACA;AACA;IACA,YAAA,CAAA,KAAA,EAAA;MACA,IAAA,QAAA,GAAA,KAAA,QAAA,CAAA,OAAA,CAAA,KAAA,KAAA,CAAA,KAAA,EAAA,MAAA,CAAA;MACA,IAAA,EAAA,QAAA,GAAA,CAAA,EAAA,QAAA,GAAA,CAAA;MACA,KAAA,KAAA,CAAA,KAAA,EAAA,MAAA,GAAA,KAAA,QAAA,CAAA,QAAA,CAAA;IACA,CAfA;;IAiBA;AACA;AACA;IACA,UAAA,CAAA,KAAA,EAAA;MACA,KAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;IACA,CAtBA;;IAwBA;AACA;AACA;IACA,QAAA,CAAA,KAAA,EAAA;MACA,KAAA,IAAA,GAAA,KAAA,KAAA,CAAA,KAAA,EAAA,IAAA;MACA,KAAA,UAAA,GAAA,KAAA;IACA,CA9BA;;IAgCA;AACA;AACA;IACA,UAAA,GAAA;MACA,IAAA,KAAA,IAAA,CAAA,MAAA,KAAA,CAAA,EAAA;MAEA;;MACA,IAAA,KAAA,UAAA,IAAA,IAAA,EAAA;QACA,KAAA,KAAA,CAAA,KAAA,UAAA,EAAA,IAAA,GAAA,KAAA,IAAA;QACA,KAAA,UAAA,GAAA,IAAA;MACA,CAHA,MAGA;QACA;QACA,KAAA,KAAA,CAAA,IAAA,CAAA;UACA,IAAA,EAAA,KAAA,IADA;UAEA,MAAA,EAAA;QAFA,CAAA;MAIA;;MAEA,KAAA,IAAA,GAAA,EAAA;IACA;;EAnDA;AA9BA,CAAA","sourcesContent":["<template>\n  <div class=\"container\" style=\"max-width: 600px\">\n    <!-- Heading -->\n    <h2 class=\"text-center mt-5\">Vuejs Todo App</h2>\n\n    <!-- Input -->\n    <div class=\"d-flex mt-5\">\n      <input\n        type=\"text\"\n        v-model=\"task\"\n        placeholder=\"Enter task\"\n        class=\"w-100 form-control\"\n      />\n      <button class=\"btn btn-warning rounded-0\" @click=\"submitTask\">\n        SUBMIT\n      </button>\n    </div>\n\n    <!-- Task table -->\n    <table class=\"table table-bordered mt-5\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Task List</th>\n          <th scope=\"col\" style=\"width: 120px\">Status</th>\n          <th scope=\"col\" class=\"text-center\">#</th>\n          <th scope=\"col\" class=\"text-center\">#</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(task, index) in tasks\" :key=\"index\">\n          <td>\n            <span :class=\"{ 'line-through': task.status === 'finished' }\">\n              {{ task.name }}\n            </span>\n          </td>\n          <td>\n            <span\n              class=\"pointer noselect\"\n              @click=\"changeStatus(index)\"\n              :class=\"{\n                'text-danger': task.status === 'to-do',\n                'text-success': task.status === 'finished',\n                'text-warning': task.status === 'in-progress',\n              }\"\n            >\n              {{ capitalizeFirstChar(task.status) }}\n            </span>\n          </td>\n          <td class=\"text-center\">\n            <div @click=\"deleteTask(index)\">\n              <span class=\"fa fa-trash pointer\"></span>\n            </div>\n          </td>\n          <td class=\"text-center\">\n            <div @click=\"editTask(index)\">\n              <p class=\"fa fa-pen pointer\"></p>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: String,\n  },\n\n  data() {\n    return {\n      task: \"\",\n      editedTask: null,\n      statuses: [\"to-do\", \"in-progress\", \"finished\"],\n\n      /* Status could be: 'to-do' / 'in-progress' / 'finished' */\n      tasks: [\n        {\n          name: \"Write an article.\",\n          status: \"to-do\",\n        },\n        {\n          name: \"Finish breakfast.\",\n          status: \"in-progress\",\n        },\n        {\n          name: \"Create a Vuejs app for assignment\",\n          status: \"finished\",\n        },\n      ],\n    };\n  },\n\n  methods: {\n    /**\n     * Capitalize first character\n     */\n    capitalizeFirstChar(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n\n    /**\n     * Change status of task by index\n     */\n    changeStatus(index) {\n      let newIndex = this.statuses.indexOf(this.tasks[index].status);\n      if (++newIndex > 2) newIndex = 0;\n      this.tasks[index].status = this.statuses[newIndex];\n    },\n\n    /**\n     * Deletes task by index\n     */\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n    },\n\n    /**\n     * Edit task\n     */\n    editTask(index) {\n      this.task = this.tasks[index].name;\n      this.editedTask = index;\n    },\n\n    /**\n     * Add / Update task\n     */\n    submitTask() {\n      if (this.task.length === 0) return;\n\n      /* We need to update the task */\n      if (this.editedTask != null) {\n        this.tasks[this.editedTask].name = this.task;\n        this.editedTask = null;\n      } else {\n        /* We need to add new task */\n        this.tasks.push({\n          name: this.task,\n          status: \"todo\",\n        });\n      }\n\n      this.task = \"\";\n    },\n  },\n};\n</script>\n\n<style scoped>\n.pointer {\n  cursor: pointer;\n}\n.noselect {\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Old versions of Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n}\n.line-through {\n  text-decoration: line-through;\n}\n</style>"],"sourceRoot":"src/components"},"metadata":{},"sourceType":"module"}